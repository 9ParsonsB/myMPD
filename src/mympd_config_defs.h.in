/*
 SPDX-License-Identifier: GPL-2.0-or-later
 myMPD (c) 2018-2021 Juergen Mang <mail@jcgames.de>
 https://github.com/jcorporation/mympd
*/

#ifndef __CONFIG_STRUCT_H__
#define __CONFIG_STRUCT_H__

//Debug build
#cmakedefine DEBUG

//libid3tag
#cmakedefine ENABLE_LIBID3TAG

//flac
#cmakedefine ENABLE_FLAC

//openssl
#cmakedefine ENABLE_SSL

//lua
#cmakedefine ENABLE_LUA

//myMPD version from cmake
#define MYMPD_VERSION_MAJOR ${CPACK_PACKAGE_VERSION_MAJOR}
#define MYMPD_VERSION_MINOR ${CPACK_PACKAGE_VERSION_MINOR}
#define MYMPD_VERSION_PATCH ${CPACK_PACKAGE_VERSION_PATCH}
#define MYMPD_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}"

//default paths
#define DOC_ROOT "${ASSETS_PATH}"
#define ETC_PATH "${ETC_PATH}"
#define VARLIB_PATH "${VARLIB_PATH}"
#define LUALIBS_PATH "${LUALIBS_PATH}"

//default navbar icons
#define NAVBAR_ICONS "[{\"ligature\":\"home\",\"title\":\"Home\",\"options\":[\"Home\"],\"badge\":\"\"},"\
    "{\"ligature\":\"equalizer\",\"title\":\"Playback\",\"options\":[\"Playback\"],\"badge\":\"\"},"\
    "{\"ligature\":\"queue_music\",\"title\":\"Queue\",\"options\":[\"Queue\"],\"badge\":\"<span id=\\\"badgeQueueItems\\\" class=\\\"badge badge-secondary\\\"></span>\"},"\
    "{\"ligature\":\"library_music\",\"title\":\"Browse\",\"options\":[\"Browse\"],\"badge\":\"\"},"\
    "{\"ligature\":\"search\",\"title\":\"Search\",\"options\":[\"Search\"],\"badge\":\"\"}]"

//measure time
#define MEASURE_START clock_t measure_start = clock();
#define MEASURE_END clock_t measure_end = clock();
#define MEASURE_PRINT(X) MYMPD_LOG_DEBUG("Execution time for %s: %lf", X, ((double) (measure_end - measure_start)) / CLOCKS_PER_SEC);

//myMPD configuration
struct t_config {
    sds user;
    sds workdir;
    sds http_host;
    sds http_port;
#ifdef ENABLE_SSL
    bool ssl;
    sds ssl_port;
    sds ssl_cert;
    sds ssl_key;
    bool custom_cert;
    sds ssl_san;
#endif
    sds acl;
    sds scriptacl;
#ifdef ENABLE_LUA
    sds lualibs;
#endif
    bool syslog;
    int loglevel;
    time_t startup_time;
    bool first_startup;
    bool bootstrap;
};

#endif
